version: '3.8'

services:
  carbon-calculator-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: greenalpha-carbon-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - MAX_WORKERS=4
      - CACHE_TTL=3600
      - ENABLE_PERFORMANCE_MONITORING=true
    volumes:
      - ./data:/app/data:ro  # Mount data directory as read-only
      - ./logs:/app/logs     # Mount logs directory
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - carbon-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  # Optional: Redis for enhanced caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: greenalpha-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - carbon-network
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 512M
  #         cpus: '0.5'

  # Optional: Monitoring with Prometheus (uncomment if needed)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: greenalpha-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   restart: unless-stopped
  #   networks:
  #     - carbon-network

networks:
  carbon-network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data: